#+title: Game Programming with Python
#+author: Marcus Birkenkrahe (birkenkrahe@lyon.edu)
#+subtitle: COR 100.09 Y1 Program Fall 2024
#+startup: overview hideblocks indent inlineimages
#+attr_html: :width 400px:
[[../img/poster.png]]

* General Course Information

- Meeting Times: Tuesday, 11:00-11:50 hrs
- Meeting place: Lyon Building Computer Lab room 104
- Professor: Marcus Birkenkrahe
- Office: Derby Science Center room 210
- Phone: (870) 307-7254 - cell: (501) 422-4725
- Office hours: [[https://calendar.app.google/yjr7tB7foMYowRJm7][by appointment]].
  
* Course description

This course on "Game Programming in Python" offers a comprehensive
introduction to the fundamentals of creating interactive and engaging
computer games. Students will learn how to use Python, a powerful and
versatile programming language, to bring their game concepts to life,
focusing on game logic, graphics rendering, and user interaction. The
curriculum covers key programming concepts, game design principles,
and the integration of libraries such as Turtle or Pygame, providing a
hands-on approach through project-based learning. By the end of the
course, participants will have developed several games from scratch,
demonstrating their understanding of the game development process and
their ability to apply programming skills in a creative
context. Acquiring programming skills in Python will not only help you
understand how computers can be used to create interactive experiences
but also enhance your critical thinking abilities. We will meet weekly
for 50 minutes of lectures, practical problem solving and interactive
exercises. Between classes, students will work on small assignments,
leading to the opportunity to present their work and (optionally)
publish their finished projects for the whole world to see at the
Humanities, Arts, and Science (H.A.T.S.) symposium at Lyon College.

* Learning Objectives

- Understand the basics of Python programming, including syntax, data
  types, and control structures.
- Learn how to use Python libraries such as =turtle= and =pygame= for game
  development.
- Develop skills in game design and storytelling to create engaging
  game narratives.
- Master game logic and problem-solving to implement game mechanics
  and player interactions.
- Gain proficiency in graphics rendering, including working with
  images, animations, and game environments.
- Explore the development of responsive user interfaces to enhance
  gameplay experience.
- Practice project-based learning to design, develop, and debug Python
  games from scratch.
- Enhance critical thinking and analytical skills through practical
  problem-solving exercises.
- Encourage creativity and innovation in applying programming skills
  to game development.
- Prepare for presenting and optionally publishing projects at the
  H.A.T.S. symposium.

* Sources

- Invent your own games with Python by Al Sweigart (4e), NoStarch
  2016, URL: [[https://inventwithpython.com/invent4thed/][inventwithpython.com/invent4thed]].

- The Beginner's Guide to Python Turtle by Nikita Silaparasetty, Feb
  26, 2020, URL: [[https://realpython.com/beginners-guide-python-turtle][realpython.com/beginners-guide-python-turtle]].

- PyGame: A Primer on Game Programming in Python by Jon Fincher, Sep
  16, 2019, URL: [[https://realpython.com/pygame-a-primer/][realpython.com/pygame-a-primer/]].
  
* Grading

| DESCRIPTION             | IMPACT |
|-------------------------+--------|
| Programming assignments |    25% |
| Tests                   |    25% |
| H.A.T.S. presentation   |    25% |
| Participation           |    25% |

*Notes:*
- To pass you need to get 60% of the available points.
- There will be 10 short programming assignments in Python.
- There will be 10 multiple choice tests to review material.
- The H.A.T.S. presentation is a session developed and executed by the
  class at the December symposium.
- Participation is the result of being present and engaged with the
  class.

* Course Schedule

| Week | TEXTBOOK CHAPTER                    |
|------+-------------------------------------|
|    1 | Plato & Programming                 |
|    2 | Plato's Meno & Game Programming     |
|    3 | Introduction and Setup              |
|    4 | Basic Turtle Movements                |
|    5 | Darawing Simple Shapes                |
|    6 | Pen Control and Colors                |
|    7 | Advanced Shape Drawing                |
|    8 | Turtle Graphics and Designs           |
|    9 | Introduction to Turtle Animation      |
|   10 | Creating Scenes and Backgrounds     |
|   11 | Interactive Turtle Programs         |
|   12 | Building a Simple Game              |
|   13 | Debugging and Enhancing Programs    |
|   14 | Final Project and Presentation      |
|   15 | Preparing the H.A.T.S. presentation |
|   16 | H.A.T.S. presentation               |

- NO CLASSES: Aug 21, Oct 10 (Fall break), Oct 19 (Service day), Nov
  23 (Thanksgiving). See [[https://catalog.lyon.edu/202324-academic-calendar][2023-2024 academic calendar]].

** Session plan

*** **Session 1: Introduction and Setup**
- **Objective**: Introduction to the `turtle` library and Python environment setup.
- **Activities**: Install Python and `turtle`, open the turtle screen, create a turtle object.
- **Materials**: Computers with Python installed, tutorial handouts.

*** **Session 2: Basic Turtle Movements**
- **Objective**: Learn basic `turtle` movement commands.
- **Activities**: Practice `forward`, `backward`, `left`, `right`, and move the turtle to specific coordinates.
- **Materials**: Sample scripts for turtle movement.

*** **Session 3: Drawing Simple Shapes**
- **Objective**: Draw basic shapes with the `turtle`.
- **Activities**: Draw squares, rectangles, and circles using turtle commands.
- **Materials**: Scripts for drawing different shapes.

*** **Session 4: Pen Control and Colors**
- **Objective**: Customize the turtleâ€™s pen and colors.
- **Activities**: Change pen size, color, and fill shapes with different colors.
- **Materials**: Example scripts demonstrating pen and color changes.

*** **Session 5: Advanced Shape Drawing**
- **Objective**: Draw complex shapes and patterns.
- **Activities**: Use loops to draw polygons and more complex shapes.
- **Materials**: Scripts with loops for drawing patterns.

*** **Session 6: Turtle Graphics and Designs**
- **Objective**: Create advanced designs with the turtle.
- **Activities**: Draw intricate designs using nested loops and shape combinations.
- **Materials**: Design templates and sample scripts.

*** **Session 7: Introduction to Turtle Animation**
- **Objective**: Learn the basics of animation with the `turtle`.
- **Activities**: Adjust turtle speed and create simple animations using loops.
- **Materials**: Animation scripts for practice.

*** **Session 8: Creating Scenes and Backgrounds**
- **Objective**: Draw backgrounds and static scenes.
- **Activities**: Use the turtle to create a background scene, like a landscape or a simple room.
- **Materials**: Background scene templates and scripts.

*** **Session 9: Interactive Turtle Programs**
- **Objective**: Create interactive programs with user input.
- **Activities**: Write scripts that respond to user inputs to control the turtle.
- **Materials**: Interactive program examples.

*** **Session 10: Building a Simple Game**
- **Objective**: Use the turtle to create a basic game.
- **Activities**: Write a script for a simple turtle-based game, such as catching objects.
- **Materials**: Game scripts and design guides.

*** **Session 11: Debugging and Enhancing Programs**
- **Objective**: Learn debugging techniques and improve turtle programs.
- **Activities**: Debug and enhance existing turtle programs with new features.
- **Materials**: Sample buggy scripts for debugging practice.

*** **Session 12: Final Project and Presentation**
- **Objective**: Complete and present a comprehensive turtle graphics project.
- **Activities**: Work on a final project that incorporates all learned elements and present it to the class.
- **Materials**: Project guidelines and presentation tips.


* Learning management system

- We use Lyon's Canvas installation for this course.
- Every session will be recorded in Zoom
- The Canvas page contains: calendar, assignments, tests, gradebook

* [[https://docs.google.com/document/d/1ZaoAIX7rdBOsRntBxPk7TK77Vld9NXECVLvT9_Jovwc/edit?usp=sharing][Lyon College Standard Policies (Fall 2023)]]

Online: https://tinyurl.com/LyonPolicyF23, see also [[https://catalog.lyon.edu/class-attendance][Class Attendance]]
