#+options: toc:nil num:nil ^:nil: 
#+startup: overview hideblocks indent entitiespretty: 
#+title: Assignment: Manipulating Integer Values
#+author: Marcus Birkenkrahe
#+subtitle: COR 100.13/Year One "Game Programming with Python"

** Instructions
For each task below, write Python code that solves the problem. You
should include comments in your code explaining each step and make
sure to test your code thoroughly. Submit your solutions as a single
Python script (.py) or Jupyter notebook (.ipynb) file.

** Task 1: Basic Arithmetic

Write Python code to perform the following arithmetic operations and
display the results:

1. Add 12 and 8.
2. Subtract 5 from 20.
3. Multiply 7 by 6.
4. Divide 18 by 3.
5. Calculate the result of 3 raised to the power of 4.

#+begin_src python :results output :session *Python* :python python3 :exports both
  print(12 + 8) # 20
  print(20-5) # 15
  print(7 * 6) # 42
  print(18/3) # 6.0
  print(3**4) # 81 = (3 * 3 * 3 * 3)
#+end_src

#+RESULTS:
: 20
: 15
: 42
: 6.0
: 81

** Task 2: Variable Manipulation

1. Assign the value 10 to a variable called x and the value 20 to a
   variable called y.
2. Add x and y together and store the result in a variable called z.
3. Print the values of x, y, and z.
4. Change the value of x to 15, and update z to reflect the new sum of
   x and y.
5. Print the updated values of x, y, and z.

#+begin_src python :results output :session *Python* :python python3 :exports both
  x = 10
  y = 10
  z = x + y
  print("x = ", x)
  print("y = ", y)
  print("z = ", z)
#+end_src

#+RESULTS:
: x =  10
: y =  10
: z =  20

** Task 3: Working with Expressions

Evaluate the following expressions in Python and print the results:

1. (5 + 3) * 2
2. 10 - (4 * 2) + 1
3. 8 / 2 + 5 * (2 + 1)
4. 3 + 5 * (2 + 4) - 6

#+begin_src python :results output :session *Python* :python python3 :exports both
  print((5 + 3) * 2) # 8 * 2 = 16
  print(10 - (4 * 2) + 1) # 10 - 8 + 1 = 3
  print(8 / 2 + 5 * (2 + 1)) # 4 + 5 * 3 = 19.0
  print(3 + 5 * (2 + 4) - 6) # 3 + 5 * 6 - 6 = 3 + 30 - 6 = 27
#+end_src

#+RESULTS:
: 16
: 3
: 19.0
: 27

** Task 4: Error Handling

1. Intentionally introduce a syntax error by writing incomplete code
   (e.g., 5 +).
2. Explain why the error occurs in a comment above your code.
3. Fix the error and re-run your code.

#+begin_src python :results output :session *Python* :python python3 :exports both
  ## the following expression is incomplete:
  ## the + operator is binary and needs a right hand value
  # wrong: 5 +
  print(5 + 5)
#+end_src   

#+RESULTS:
: 10

** Task 5: Bonus Challenge (Optional)

Write Python code that asks the user to input two integer
values. Then, compute and display the sum, difference, product, and
quotient of the two numbers. Make sure to handle any potential
division by zero errors using error handling.

Tip: the following code block gets the value for x and y from the keyboard:
#+begin_example
x = input("Enter value for x: ")
y = input("Enter value for y: ")
print("You entered:", x, "and", y)
#+end_example

Running the code in Colab:
#+attr_html: :width 600px:
[[../../img/input.png]]

** Submission

Submit a link to your complete Google Colab notebook file with all
tasks solved. Make sure to include comments explaining your code.

